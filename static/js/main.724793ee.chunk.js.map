{"version":3,"sources":["footer/footer.module.css","features/usaCharts/usaCharts.module.css","features/countries/countriesSlice.js","features/countries/Countries.js","features/india/indiaSlice.js","features/india/India.js","navbar/Navbar.js","features/countries-chart/countriesChartSlice.js","features/countries-chart/Countrieschart.js","footer/Footer.js","features/usa/usaSlice.js","features/usa/Usa.js","features/usaCharts/usaChartsSlice.js","features/usaCharts/UsaCharts.js","thanks/Thanks.js","info/Info.js","features/canada/Canada.js","features/canadaCharts/canadaChartSlice.js","features/canadaCharts/CanadaCharts.js","App.js","serviceWorker.js","reducers/index.js","store/store.js","index.js","navbar/navbar.module.css","features/usa/usa.module.css","features/india/india.module.css"],"names":["module","exports","fetchCountries","createAsyncThunk","a","fetch","res","json","data","countriesSlice","createSlice","name","initialState","countries","isLoading","error","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","reducer","actions","selectCountries","Countries","useState","filterText","setFilterText","React","expanded","setExpanded","dispatch","useDispatch","useLayoutEffect","info","useSelector","className","CircularProgress","Input","type","disableUnderline","startAdornment","InputAdornment","position","placeholder","onKeyUp","e","target","value","toLowerCase","style","width","padding","filter","x","country","includes","map","Accordion","onChange","panel","event","isExpanded","key","AccordionSummary","expandIcon","aria-controls","id","src","countryInfo","flag","alt","loading","population","toLocaleString","AccordionDetails","cases","recovered","deaths","active","deathsPerOneMillion","todayCases","todayDeaths","testsPerOneMillion","AccordionActions","to","textDecoration","Button","size","variant","color","endIcon","fetchStats","indiaSlice","regionData","activeCases","selectIndiaStats","indiaStats","India","styles","blu","textclr","region","totalInfected","deceased","newDeceased","Navbar","AppBar","Paper","headerStyle","Typography","fontFamily","textAlign","backgroundColor","fontWeight","navStyle","activeClassName","Icon","fetchCountriesChart","selectedCountry","axios","get","countriesChartSlice","chart","dates","Object","values","timeline","keys","selectCountriesChart","Countrieschart","useParams","useEffect","casesArr","deathsArr","recoveredArr","datesArr","labels","datasets","label","borderColor","borderWidth","container","minHeight","display","flexWrap","alignContent","justifyContent","height","alignItems","alignSelf","fontSize","marginLeft","marginRight","marginTop","nameStyle","paddingTop","centerText","Footer","footerText","paddingBottom","href","fetchUsaStats","usaSlice","usdata","selectUsaStats","usaStats","Usa","accordContainer","s","summaryContainer","heading","secondaryHeading","fetchUsaChart","selectedState","thunkAPI","usaChartSlice","date","usState","forEach","c","push","d","t","selectUsaChart","usaChart","UsaCharts","sourceCases","sourceDeaths","Thanks","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","bgStyle","Info","provinces","Canada","Card","CardContent","CardActions","fetchCanadaChart","selectedProvince","canadaChartSlice","province","selectCanadaChart","canadaChart","Canadacharts","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","combineReducers","countriesReducer","indiaStatsReducer","casesReducer","usaReducer","usaChartReducer","canadaChartReducer","store","configureStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.724793ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerText\":\"footer_footerText__1BVaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"usaCharts_loading__19RsX\"};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst sliceName = \"country\";\r\nexport const fetchCountries = createAsyncThunk(\r\n  `${sliceName}/fetchCountries`,\r\n  async () => {\r\n    const res = await fetch(\"https://disease.sh/v2/countries\");\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const countriesSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: { countries: [], isLoading: false, error: \"\" },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCountries.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n      state.countries = [];\r\n    },\r\n    [fetchCountries.fulfilled]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      state.countries = action.payload;\r\n    },\r\n    [fetchCountries.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = countriesSlice;\r\nexport default reducer;\r\nexport const selectCountries = (state) => state.countries;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useLayoutEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCountries } from \"./countriesSlice\";\r\nimport { fetchCountries } from \"./countriesSlice\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// import Fade from \"react-reveal/Fade\";\r\n\r\n/////////////////////////////////////////////\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\n\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./countries.css\";\r\n\r\nfunction Countries() {\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const searchCountry = (e) => {\r\n    setFilterText(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(fetchCountries());\r\n  }, [dispatch]);\r\n\r\n  const info = useSelector(selectCountries);\r\n\r\n  if (info.error) {\r\n    return <div>{info.error}</div>;\r\n  }\r\n\r\n  if (info.isLoading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        type=\"search\"\r\n        disableUnderline={true}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        }\r\n        placeholder=\"Type name of country to search\"\r\n        onKeyUp={searchCountry}\r\n        style={{ width: \"90vw\", padding: \"20px\" }}\r\n      />\r\n      <div className=\"accordionContainer\">\r\n        {info.countries\r\n          .filter((x) => x.country.toLowerCase().includes(filterText))\r\n          .map((res) => (\r\n            <Accordion\r\n              expanded={expanded === res.country}\r\n              onChange={handleChange(res.country)}\r\n              key={res.country}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <div>\r\n                  <div className=\"SummaryDisp\">\r\n                    <div className=\"SummaryCont1\">\r\n                      <img\r\n                        src={res.countryInfo.flag}\r\n                        alt=\"country flag\"\r\n                        loading=\"lazy\"\r\n                        width=\"50px\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"SummaryCont2\">\r\n                      <div> {res.country}</div>\r\n                    </div>\r\n                    <div className=\"SummaryCont2\">\r\n                      population: {res.population.toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                Cases: {res.cases.toLocaleString()}&nbsp;&nbsp;Recovered:{\" \"}\r\n                {res.recovered === 0 ? \"N/A\" : res.recovered.toLocaleString()} |\r\n                Deaths: {res.deaths.toLocaleString()} | Active:{\" \"}\r\n                {res.active.toLocaleString()} | Deaths per million:{\" \"}\r\n                {res.deathsPerOneMillion.toLocaleString()} | Today's cases:{\" \"}\r\n                {res.todayCases.toLocaleString()} | Today's deaths:{\" \"}\r\n                {res.todayDeaths.toLocaleString()} | Tests per million:{\" \"}\r\n                {res.testsPerOneMillion.toLocaleString()}\r\n              </AccordionDetails>\r\n              {/* <Divider /> */}\r\n              <AccordionActions>\r\n                <Link\r\n                  to={\"/countrieschart/\" + res.country}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<InsertChartIcon />}\r\n                  >\r\n                    Chart\r\n                  </Button>\r\n                </Link>\r\n              </AccordionActions>\r\n            </Accordion>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Countries;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst sliceName = \"india\";\r\nexport const fetchStats = createAsyncThunk(\r\n  `${sliceName}/fetchStats`,\r\n  async () => {\r\n    const res = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/toDWvRj1JpTXiM8FF/records/LATEST\"\r\n    );\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n);\r\nexport const indiaSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: {\r\n    regionData: [],\r\n    activeCases: \"\",\r\n    recovered: \"\",\r\n    deaths: \"\",\r\n    isLoading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchStats.pending]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [fetchStats.fulfilled]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      state.activeCases = action.payload.activeCases;\r\n      state.recovered = action.payload.recovered;\r\n      state.deaths = action.payload.deaths;\r\n      state.regionData = action.payload.regionData;\r\n    },\r\n    [fetchStats.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = indiaSlice;\r\nexport default reducer;\r\nexport const selectIndiaStats = (state) => state.indiaStats;\r\n","import React from \"react\";\r\nimport { useLayoutEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIndiaStats } from \"./indiaSlice\";\r\nimport { fetchStats } from \"./indiaSlice\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport styles from \"./india.module.css\";\r\n\r\nfunction India() {\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(fetchStats());\r\n  }, [dispatch]);\r\n\r\n  const data = useSelector(selectIndiaStats);\r\n\r\n  if (data.error) {\r\n    return <div>{data.error}</div>;\r\n  }\r\n\r\n  if (data.isLoading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.blu}>Stats for India</h1>\r\n      <div className={styles.textclr}>\r\n        Active Cases: {data.activeCases.toLocaleString()}&nbsp; Recovered:{\" \"}\r\n        {data.recovered.toLocaleString()}&nbsp; Deaths:{\" \"}\r\n        {data.deaths.toLocaleString()}&nbsp;\r\n      </div>\r\n      <br></br>\r\n      <hr></hr>\r\n      {data.regionData.map((x) => (\r\n        <div key={x.region}>\r\n          <div className={styles.textclr}>\r\n            <h2>{x.region}</h2>\r\n            <div>Total infected: {x.totalInfected.toLocaleString()}</div>\r\n            <div>Recovered: {x.recovered.toLocaleString()}</div>\r\n            <div>Deaths: {x.deceased.toLocaleString()}</div>\r\n            <div>New Deaths: {x.newDeceased.toLocaleString()}</div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default India;\r\n","// import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./navbar.css\";\r\n\r\n// export class Navbar extends Component {\r\n//   render() {\r\n//     return (\r\n//       <nav>\r\n//         <ul>\r\n//           <li>\r\n//             <Link to=\"/\">Home</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/india\">India</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/countries\">Countries</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/countrieschart\">Chart</Link>\r\n//           </li>\r\n//         </ul>\r\n//       </nav>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Navbar;\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport styles from \"./navbar.module.css\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Paper className={styles.headerStyle}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          style={{\r\n            fontFamily: \"Rajdhani\",\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            backgroundColor: \"#3C245B\",\r\n            fontWeight: \"500\",\r\n            padding: \"10px\",\r\n            color: \"#fff\",\r\n          }}\r\n        >\r\n          Covid 19 Tracker\r\n        </Typography>\r\n        <div className={styles.navStyle} style={{ textDecoration: \"none\" }}>\r\n          <div>\r\n            <NavLink to={\"/Countries\"} activeClassName={styles.active}>\r\n              <Icon>language</Icon>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <NavLink\r\n              to={\"/usa\"}\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h5>USA</h5>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <NavLink\r\n              to={\"/canada\"}\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h5>CANADA</h5>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <NavLink\r\n              to={\"/India\"}\r\n              activeClassName={styles.active}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h5>INDIA</h5>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <NavLink to={\"/Info\"} activeClassName={styles.active}>\r\n              <Icon>assignment</Icon>\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <NavLink to={\"/thanks\"} activeClassName={styles.active}>\r\n              <Icon>favorite</Icon>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n//    < a href = \"https://www.freepik.com/free-photos-vectors/infographic\" > Infographic vector created by pikisuperstar - www.freepik.com</a >\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst sliceName = \"countryChart\";\r\n\r\nexport const fetchCountriesChart = createAsyncThunk(\r\n  `${sliceName}/fetchCountriesChart`,\r\n  async (selectedCountry) => {\r\n    const data = await axios.get(\r\n      `https://disease.sh/v2/historical/${selectedCountry}?lastdays=all`\r\n    );\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const countriesChartSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: {\r\n    chart: [],\r\n    cases: [],\r\n    recovered: [],\r\n    deaths: [],\r\n    dates: [],\r\n    isLoading: false,\r\n    country: \"\",\r\n    error: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCountriesChart.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n      state.chart = [];\r\n    },\r\n    [fetchCountriesChart.fulfilled]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      state.country = action.payload.data.country;\r\n      state.cases = Object.values(action.payload.data.timeline.cases);\r\n      state.recovered = Object.values(action.payload.data.timeline.recovered);\r\n      state.deaths = Object.values(action.payload.data.timeline.deaths);\r\n      state.dates = Object.keys(action.payload.data.timeline.cases);\r\n    },\r\n    [fetchCountriesChart.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = countriesChartSlice;\r\nexport default reducer;\r\nexport const selectCountriesChart = (state) => state.chart;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCountriesChart } from \"./countriesChartSlice\";\r\nimport { fetchCountriesChart } from \"./countriesChartSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction Countrieschart() {\r\n  const selectedCountry = useParams().country;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCountriesChart(selectedCountry));\r\n  }, [dispatch, selectedCountry]);\r\n\r\n  const info = useSelector(selectCountriesChart);\r\n\r\n  const casesArr = Object.values(info.cases);\r\n  const deathsArr = Object.values(info.deaths);\r\n  const recoveredArr = Object.values(info.recovered);\r\n  const datesArr = Object.values(info.dates);\r\n\r\n  const error = info.error;\r\n  const loading = info.isLoading;\r\n\r\n  const data = {\r\n    labels: datesArr,\r\n    datasets: [\r\n      {\r\n        label: \"Cases\",\r\n        data: casesArr,\r\n        borderColor: \"rgba(33, 150, 243, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(33, 150, 243, 0.6)\",\r\n      },\r\n\r\n      {\r\n        label: \"Deaths\",\r\n        data: deathsArr,\r\n        borderColor: \"rgba(255, 87, 34, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(255, 87, 34, 0.6)\",\r\n      },\r\n\r\n      {\r\n        label: \"Recovered\",\r\n        data: recoveredArr,\r\n        borderColor: \"rgba(0, 191, 165, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(0, 191, 165, 0.6)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const container = {\r\n    minHeight: \"80vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  const graphBox = {\r\n    width: \"90%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"30px\",\r\n  };\r\n  if (error) {\r\n    return <p style={container}>{error}</p>;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={container}>\r\n        <div\r\n          style={{\r\n            height: \"90vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={container}>\r\n      {\r\n        <Link to={\"/countries\"}>\r\n          <div style={{ alignSelf: \"flex-start\" }}>\r\n            <ArrowBackIosIcon fontSize=\"small\" />\r\n          </div>\r\n        </Link>\r\n      }\r\n      {\r\n        <div>\r\n          {<div>Graph for {info.country}</div>}\r\n          {\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Click the legend below to isolate records\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <div style={graphBox}>\r\n        <Bar data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countrieschart;\r\n","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst nameStyle = {\r\n  fontSize: 15,\r\n  fontWeight: 500,\r\n  textAlign: \"center\",\r\n  paddingTop: 20,\r\n  color: \"#fff\",\r\n};\r\n\r\nconst centerText = {\r\n  fontSize: 12,\r\n  fontWeight: 400,\r\n  textAlign: \"center\",\r\n  color: \"#fff\",\r\n};\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div\r\n      className={styles.footerText}\r\n      style={{ backgroundColor: \"#000\", paddingBottom: 20 }}\r\n    >\r\n      <div style={nameStyle}>Adi Gonsalves</div>\r\n      <div style={centerText}>thedesignman.com</div>\r\n      <div style={centerText}>\r\n        Built with React Redux, Material UI and Chart JS\r\n      </div>\r\n      <div style={centerText}>Data provided by NovelCOVID API and Apify</div>\r\n      <p style={centerText}>\r\n        <a href=\"https://www.freepik.com/free-photos-vectors/infographic\">\r\n          Infographic vector created by pikisuperstar - www.freepik.com{\" \"}\r\n        </a>\r\n        <br></br>\r\n        <a href=\"https://www.freepik.com/vectors/girl\">\r\n          Logo created by brgfx - www.freepik.com\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nconst sliceName = \"usa\";\r\nexport const fetchUsaStats = createAsyncThunk(\r\n  `${sliceName}/fetchUsaStats`,\r\n  async () => {\r\n    const res = await fetch(\"https://disease.sh/v3/covid-19/states\");\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n);\r\nexport const usaSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: {\r\n    usdata: [],\r\n    isLoading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUsaStats.pending]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [fetchUsaStats.fulfilled]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      state.usdata = action.payload;\r\n    },\r\n    [fetchUsaStats.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = usaSlice;\r\nexport default reducer;\r\nexport const selectUsaStats = (state) => state.usaStats;\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUsaStats } from \"./usaSlice\";\r\nimport { fetchUsaStats } from \"./usaSlice\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\n\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./usa.module.css\";\r\n\r\nfunction Usa() {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(fetchUsaStats());\r\n  }, [dispatch]);\r\n  const res = useSelector(selectUsaStats);\r\n\r\n  if (res.error) {\r\n    return <div>{res.error}</div>;\r\n  }\r\n\r\n  if (res.isLoading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Stats for USA</h1>\r\n      <div className={styles.accordContainer}>\r\n        {res.usdata.map((s) => (\r\n          <Accordion\r\n            expanded={expanded === s.state}\r\n            onChange={handleChange(s.state)}\r\n            key={s.state}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1bh-content\"\r\n              id=\"panel1bh-header\"\r\n            >\r\n              <div className={styles.summaryContainer}>\r\n                <div className={styles.heading}>{s.state}</div>\r\n                <div className={styles.secondaryHeading}>\r\n                  population:{\" \"}\r\n                  {s.population === 0 ? \"N/A\" : s.population.toLocaleString()}\r\n                </div>\r\n              </div>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              Cases: {s.cases.toLocaleString()} | Recovered:{\" \"}\r\n              {s.recovered.toLocaleString()} | Deaths:{\" \"}\r\n              {s.deaths.toLocaleString()} | Today's Cases{\" \"}\r\n              {s.todayCases.toLocaleString()} | Today's Deaths{\" \"}\r\n              {s.todayDeaths.toLocaleString()} | Deaths Per Million:{\" \"}\r\n              {s.deathsPerOneMillion.toLocaleString()}\r\n            </AccordionDetails>\r\n            <AccordionActions>\r\n              <Link\r\n                to={\"/usachart/\" + s.state}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  endIcon={<InsertChartIcon />}\r\n                >\r\n                  Chart\r\n                </Button>\r\n              </Link>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Usa;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst sliceName = \"usaChart\";\r\n\r\nexport const fetchUsaChart = createAsyncThunk(\r\n  `${sliceName}/fetchUsaChart`,\r\n  async (selectedState, thunkAPI) => {\r\n    const data = await axios.get(\r\n      `https://disease.sh/v3/covid-19/nyt/states/${selectedState}?lastdays=all`\r\n    );\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const usaChartSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: {\r\n    cases: [],\r\n    deaths: [],\r\n    date: [],\r\n    isLoading: false,\r\n    usState: \"\",\r\n    error: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUsaChart.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [fetchUsaChart.fulfilled]: (state, action) => {\r\n      state.cases = [];\r\n      state.deaths = [];\r\n      state.date = [];\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      action.payload.data.forEach((c) => {\r\n        state.cases.push(c.cases);\r\n      });\r\n      action.payload.data.forEach((d) => state.deaths.push(d.deaths));\r\n      action.payload.data.forEach((t) => state.date.push(t.date));\r\n      state.usState = action.payload.data[0].state;\r\n    },\r\n    [fetchUsaChart.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = usaChartSlice;\r\nexport default reducer;\r\nexport const selectUsaChart = (state) => state.usaChart;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUsaChart } from \"./usaChartsSlice\";\r\nimport { fetchUsaChart } from \"./usaChartsSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport styles from \"./usaCharts.module.css\";\r\n\r\nfunction UsaCharts() {\r\n  const selectedState = useParams().state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchUsaChart(selectedState));\r\n  }, [dispatch, selectedState]);\r\n\r\n  const info = useSelector(selectUsaChart);\r\n\r\n  const sourceCases = info.cases;\r\n  const sourceDeaths = info.deaths;\r\n  const sourceDate = info.date;\r\n\r\n  const data = {\r\n    labels: sourceDate,\r\n    datasets: [\r\n      {\r\n        label: \"Cases\",\r\n        data: sourceCases,\r\n        borderColor: \"rgba(33, 150, 243, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(33, 150, 243, 0.6)\",\r\n      },\r\n      {\r\n        label: \"Deaths\",\r\n        data: sourceDeaths,\r\n        borderColor: \"rgba(255, 87, 34, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(255, 87, 34, 0.6)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const container = {\r\n    minHeight: \"80vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  const graphBox = {\r\n    width: \"90%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"30px\",\r\n  };\r\n\r\n  if (info.error) {\r\n    return <p>{info.error}</p>;\r\n  }\r\n\r\n  if (info.isLoading) {\r\n    return (\r\n      <div className={styles.loading}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={container}>\r\n      {\r\n        <Link to={\"/usa\"}>\r\n          <div style={{ alignSelf: \"flex-start\" }}>\r\n            <ArrowBackIosIcon fontSize=\"small\" />\r\n          </div>\r\n        </Link>\r\n      }\r\n      {\r\n        <div>\r\n          {<div>Graph for {info.usState}</div>}\r\n          {\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Click the legend below to isolate records\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <div style={graphBox}>\r\n        <Bar data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsaCharts;\r\n","import React from \"react\";\r\n\r\nfunction Thanks() {\r\n  const bgStyle = {\r\n    textAlign: \"center\",\r\n    minHeight: \"80vh\",\r\n    // marginTop: '10%',\r\n    width: \"100%\",\r\n    backgroundImage:\r\n      \"url(https://thewebman.github.io/coronapwa/images/thanks.svg)\",\r\n    backgroundColor: \"#67BAFE\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"contain\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  };\r\n  return <div style={bgStyle}></div>;\r\n}\r\n\r\nexport default Thanks;\r\n\r\n// <a href=\"https://www.freepik.com/free-photos-vectors/doctor\">Doctor vector created by freepik - www.freepik.com</a>\r\n// backgroundImage: \"url(https://thedesignman.com/corona/images/thanks.svg)\",\r\n","import React from \"react\";\r\nconst bgStyle = {\r\n  textAlign: \"center\",\r\n  minHeight: \"80vh\",\r\n  // marginTop: '10%',\r\n  width: \"100%\",\r\n  backgroundImage:\r\n    \"url(https://thewebman.github.io/coronapwa/images/maskup.svg)\",\r\n  backgroundColor: \"#A9D8FF\",\r\n  backgroundPosition: \"center\",\r\n  backgroundSize: \"contain\",\r\n  backgroundRepeat: \"no-repeat\",\r\n};\r\n\r\nfunction Info() {\r\n  return <div style={bgStyle}></div>;\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\n\r\n// import Progress from \"../../progress/Progress\";\r\nimport styles from \"./canada.css\";\r\n\r\nconst provinces = [\r\n  \"British Columbia\",\r\n  \"Alberta\",\r\n  \"Saskatchewan\",\r\n  \"Manitoba\",\r\n  \"Ontario\",\r\n  \"Quebec\",\r\n  \"Newfoundland and Labrador\",\r\n  \"New Brunswick\",\r\n  \"Nova Scotia\",\r\n  \"Prince Edward Island\",\r\n  \"Yukon\",\r\n  \"Northwest Territories\",\r\n];\r\n\r\nconst Canada = () => {\r\n  return (\r\n    <div className=\"cardContainer\">\r\n      <h1>Stats for Canada</h1>\r\n      {provinces.map((res) => (\r\n        <Card key={res}>\r\n          <CardContent className=\"MuiCardContent-oot\">\r\n            <div>{res}</div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <div className=\"buttonPanel\">\r\n              <Link\r\n                to={\"/canadachart/\" + res}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  endIcon={<InsertChartIcon />}\r\n                >\r\n                  Chart\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canada;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst sliceName = \"canadaChart\";\r\nexport const fetchCanadaChart = createAsyncThunk(\r\n  `${sliceName}/fetchCanadaChart`,\r\n  async (selectedProvince, thunkAPI) => {\r\n    const data = await axios.get(\r\n      `https://disease.sh/v3/covid-19/historical/canada/${selectedProvince}?lastdays=all`\r\n    );\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const canadaChartSlice = createSlice({\r\n  name: sliceName,\r\n  initialState: {\r\n    cases: [],\r\n    deaths: [],\r\n    // recovered: [],\r\n    dates: [],\r\n    isLoading: false,\r\n    province: \"\",\r\n    error: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCanadaChart.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [fetchCanadaChart.fulfilled]: (state, action) => {\r\n      state.error = null;\r\n      state.isLoading = false;\r\n      state.cases = Object.values(action.payload.data.timeline.cases);\r\n      //   state.recovered = Object.values(action.payload.data.timeline.recovered);\r\n      state.deaths = Object.values(action.payload.data.timeline.deaths);\r\n      state.dates = Object.keys(action.payload.data.timeline.cases);\r\n      state.province = action.payload.data.province;\r\n    },\r\n    [fetchCanadaChart.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = \"Sorry no data available, please try later\";\r\n    },\r\n  },\r\n});\r\nexport const { actions, reducer } = canadaChartSlice;\r\nexport default reducer;\r\nexport const selectCanadaChart = (state) => state.canadaChart;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCanadaChart } from \"./canadaChartSlice\";\r\nimport { selectCanadaChart } from \"./canadaChartSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction Canadacharts() {\r\n  const selectedProvince = useParams().province;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCanadaChart(selectedProvince));\r\n  }, [dispatch, selectedProvince]);\r\n\r\n  const info = useSelector(selectCanadaChart);\r\n\r\n  const casesArr = Object.values(info.cases);\r\n  const deathsArr = Object.values(info.deaths);\r\n  // const recoveredArr = Object.values(info.recovered);\r\n  const datesArr = Object.values(info.dates);\r\n\r\n  const error = info.error;\r\n  const loading = info.isLoading;\r\n\r\n  const data = {\r\n    labels: datesArr,\r\n    datasets: [\r\n      {\r\n        label: \"Cases\",\r\n        data: casesArr,\r\n        borderColor: \"rgba(33, 150, 243, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(33, 150, 243, 0.6)\",\r\n      },\r\n\r\n      {\r\n        label: \"Deaths\",\r\n        data: deathsArr,\r\n        borderColor: \"rgba(255, 87, 34, 1)\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"rgba(255, 87, 34, 0.6)\",\r\n      },\r\n\r\n      // {\r\n      //   label: \"Recovered\",\r\n      //   data: recoveredArr,\r\n      //   borderColor: \"rgba(0, 191, 165, 1)\",\r\n      //   borderWidth: 1,\r\n      //   backgroundColor: \"rgba(0, 191, 165, 0.6)\",\r\n      // },\r\n    ],\r\n  };\r\n\r\n  const container = {\r\n    minHeight: \"80vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  const graphBox = {\r\n    width: \"90%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"30px\",\r\n  };\r\n\r\n  if (error) {\r\n    return <p style={container}>{error}</p>;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={container}>\r\n        <div\r\n          style={{\r\n            height: \"90vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={container}>\r\n      {\r\n        <Link to={\"/canada\"}>\r\n          <div style={{ alignSelf: \"flex-start\" }}>\r\n            <ArrowBackIosIcon fontSize=\"small\" />\r\n          </div>\r\n        </Link>\r\n      }\r\n      {\r\n        <div>\r\n          {<div>Graph for {selectedProvince}</div>}\r\n          {\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Click the legend below to isolate records\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <div style={graphBox}>\r\n        <Bar data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canadacharts;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Countries from \"./features/countries/Countries\";\r\nimport India from \"./features/india/India\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Navbar from \"./navbar/Navbar\";\r\nimport Countrieschart from \"./features/countries-chart/Countrieschart\";\r\nimport Footer from \"./footer/Footer\";\r\nimport Usa from \"./features/usa/Usa\";\r\nimport UsaCharts from \"./features/usaCharts/UsaCharts\";\r\nimport Thanks from \"./thanks/Thanks\";\r\nimport Info from \"./info/Info\";\r\nimport Canada from \"./features/canada/Canada\";\r\nimport Canadacharts from \"./features/canadaCharts/CanadaCharts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App-header App\">\r\n        <Navbar />\r\n        <Route path=\"/\" exact component={Countries} />\r\n        <Route path=\"/india\" component={India} />\r\n        <Route path=\"/usa\" component={Usa} />\r\n        <Route path=\"/usachart/:state\" component={UsaCharts} />\r\n        <Route path=\"/canada/\" component={Canada} />\r\n        <Route path=\"/canadachart/:province\" component={Canadacharts} />\r\n        <Route path=\"/countries\" component={Countries} />\r\n        <Route path=\"/countrieschart/:country\" component={Countrieschart} />\r\n        <Route path=\"/thanks\" component={Thanks} />\r\n        <Route path=\"/info\" component={Info} />\r\n      </div>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nimport countriesReducer from \"../features/countries/countriesSlice\";\r\nimport indiaStatsReducer from \"../features/india/indiaSlice\";\r\nimport casesReducer from \"../features/countries-chart/countriesChartSlice\";\r\nimport usaReducer from \"../features/usa/usaSlice\";\r\nimport usaChartReducer from \"../features/usaCharts/usaChartsSlice\";\r\nimport canadaChartReducer from \"../features/canadaCharts/canadaChartSlice\";\r\nexport default combineReducers({\r\n  countries: countriesReducer,\r\n  indiaStats: indiaStatsReducer,\r\n  chart: casesReducer,\r\n  usaStats: usaReducer,\r\n  usaChart: usaChartReducer,\r\n  canadaChart: canadaChartReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"navbar_active__uT_Td\",\"linkColor\":\"navbar_linkColor__1WkCT\",\"headerStyle\":\"navbar_headerStyle__1sP5Q\",\"navStyle\":\"navbar_navStyle__174eE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordContainer\":\"usa_accordContainer__1yoa1\",\"heading\":\"usa_heading__3efZh\",\"secondaryHeading\":\"usa_secondaryHeading__3lDeE\",\"summaryContainer\":\"usa_summaryContainer__2GsKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blu\":\"india_blu__gP7cK\",\"textclr\":\"india_textclr__1kLxz\",\"loading\":\"india_loading__28mdt\"};"],"sourceRoot":""}